package signaliStavka;
import com.ftn.sbnz2023tim3.model.modeli.dto.Signal;
import com.ftn.sbnz2023tim3.model.modeli.enumeracije.TipSignala;
import com.ftn.sbnz2023tim3.model.modeli.enumeracije.VisinaSignala;
import com.ftn.sbnz2023tim3.model.modeli.dto.StavkaRezultataSignala;
import com.ftn.sbnz2023tim3.model.modeli.tabele.Pregled;
import com.ftn.sbnz2023tim3.model.modeli.enumeracije.StanjeEEGPregleda;
import com.ftn.sbnz2023tim3.model.modeli.dto.RezultatSignala;
import java.util.Date;
import java.util.Collection;
import java.util.Collections;
import java.util.Arrays;


rule "sumiranje svih alfa signala"
when
    $pregled: Pregled(stanjeEEGPregleda == StanjeEEGPregleda.ZAVRSEN)
    $brPovisenih: Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.ALFA, pregled.id == $pregled.id, stanje == VisinaSignala.VISOKA),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brSmanjenih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.ALFA, stanje == VisinaSignala.NISKA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brNormalnih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.ALFA, stanje == VisinaSignala.NORMALNA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $ukupanBr:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.ALFA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
then
    System.out.println("ALFA ----- Br povisenih: " + $brPovisenih + " br snizenih: " + $brSmanjenih + " br normalnih: " + $brNormalnih + " ukupan broj: "+$ukupanBr);
    insert(new RezultatSignala($pregled.getId(), TipSignala.ALFA, $brPovisenih.doubleValue(), $brSmanjenih.doubleValue(), $brNormalnih.doubleValue(), $ukupanBr.doubleValue()));
end


rule "sumiranje svih beta signala"
when
    $pregled: Pregled(stanjeEEGPregleda == StanjeEEGPregleda.ZAVRSEN)
    $brPovisenih: Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.BETA, pregled.id == $pregled.id, stanje == VisinaSignala.VISOKA),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brSmanjenih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.BETA, stanje == VisinaSignala.NISKA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brNormalnih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.BETA, stanje == VisinaSignala.NORMALNA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $ukupanBr:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.BETA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
then
    System.out.println("BETA ----- Br povisenih: " + $brPovisenih + " br snizenih: " + $brSmanjenih + " br normalnih: " + $brNormalnih + " ukupan broj: "+$ukupanBr);
    insert(new RezultatSignala($pregled.getId(), TipSignala.BETA, $brPovisenih.doubleValue(), $brSmanjenih.doubleValue(), $brNormalnih.doubleValue(), $ukupanBr.doubleValue()));
end


rule "sumiranje svih gama signala"
when
    $pregled: Pregled(stanjeEEGPregleda == StanjeEEGPregleda.ZAVRSEN)
    $brPovisenih: Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.GAMA, pregled.id == $pregled.id, stanje == VisinaSignala.VISOKA),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brSmanjenih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.GAMA, stanje == VisinaSignala.NISKA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brNormalnih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.GAMA, stanje == VisinaSignala.NORMALNA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $ukupanBr:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.GAMA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
then
    System.out.println("GAMA ----- Br povisenih: " + $brPovisenih + " br snizenih: " + $brSmanjenih + " br normalnih: " + $brNormalnih + " ukupan broj: "+$ukupanBr);
    insert(new RezultatSignala($pregled.getId(), TipSignala.GAMA, $brPovisenih.doubleValue(), $brSmanjenih.doubleValue(), $brNormalnih.doubleValue(), $ukupanBr.doubleValue()));
end


rule "sumiranje svih delta signala"
when
    $pregled: Pregled(stanjeEEGPregleda == StanjeEEGPregleda.ZAVRSEN)
    $brPovisenih: Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.DELTA, pregled.id == $pregled.id, stanje == VisinaSignala.VISOKA),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brSmanjenih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.DELTA, stanje == VisinaSignala.NISKA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brNormalnih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.DELTA, stanje == VisinaSignala.NORMALNA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $ukupanBr:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.DELTA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
then
    System.out.println("DELTA ----- Br povisenih: " + $brPovisenih + " br snizenih: " + $brSmanjenih + " br normalnih: " + $brNormalnih + " ukupan broj: "+$ukupanBr);
    insert(new RezultatSignala($pregled.getId(), TipSignala.DELTA, $brPovisenih.doubleValue(), $brSmanjenih.doubleValue(), $brNormalnih.doubleValue(), $ukupanBr.doubleValue()));
end


rule "sumiranje svih teta signala"
when
    $pregled: Pregled(stanjeEEGPregleda == StanjeEEGPregleda.ZAVRSEN)
    $brPovisenih: Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.TETA, pregled.id == $pregled.id, stanje == VisinaSignala.VISOKA),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brSmanjenih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.TETA, stanje == VisinaSignala.NISKA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $brNormalnih:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.TETA, stanje == VisinaSignala.NORMALNA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
    $ukupanBr:Number(intValue >= 0) from accumulate (
                         $stavka: StavkaRezultataSignala(tip == TipSignala.TETA, pregled.id == $pregled.id),
//                         over window: time(30m),
                         count($stavka)
                     )
then
    System.out.println("TETA ----- Br povisenih: " + $brPovisenih + " br snizenih: " + $brSmanjenih + " br normalnih: " + $brNormalnih + " ukupan broj: "+$ukupanBr);
    insert(new RezultatSignala($pregled.getId(), TipSignala.TETA, $brPovisenih.doubleValue(), $brSmanjenih.doubleValue(), $brNormalnih.doubleValue(), $ukupanBr.doubleValue()));
end
